#!/usr/bin/env bash
set -e

DISK="$1"

while true; do
    read -p "Is the firmware [B]IOS or [U]EFI: " FIRMWARE
    case $FIRMWARE in
        [Bb] | [Bb][Ii][Oo][Ss] ) IS_BIOS=1; break;;
        [Uu] | [Uu][Ee][Ff][Ii] ) IS_BIOS=0; break;;
        * ) echo "Please enter B or U";;
    esac
done

parted $DISK mklabel gpt
parted -s $DISK mkpart primary fat16 1MiB 513MiB
parted -s $DISK mkpart primary ext4 513MiB 100%
parted -s $DISK set 1 boot on
if [ $FIRMWARE ]; then
   parted -s $DISK set 1 bios_grub on
fi
parted -s $DISK name 1 Boot
parted -s $DISK name 2 Root

PART_ONE="$DISK"1""
PART_TWO="$DISK"2""

cryptsetup luksFormat $PART_TWO
cryptsetup open --type luks $PART_TWO lvm

pvcreate -ff /dev/mapper/lvm

vgcreate vg /dev/mapper/lvm

lvcreate -L 10G vg -n root
lvcreate -L 30G vg -n nix
lvcreate -L 10G vg -n var
lvcreate -l 100%FREE vg -n home

mkfs.vfat -F32 -n BOOT $PART_ONE
mkfs.btrfs -L root /dev/mapper/vg-root
mkfs.btrfs -L nix  /dev/mapper/vg-nix
mkfs.btrfs -L var  /dev/mapper/vg-var
mkfs.btrfs -L home /dev/mapper/vg-home

mount /dev/mapper/vg-root /mnt
mkdir /mnt/boot /mnt/nix /mnt/var /mnt/home
mount $PART_ONE /mnt/boot
mount /dev/mapper/vg-nix  /mnt/nix
mount /dev/mapper/vg-var  /mnt/var
mount /dev/mapper/vg-home /mnt/home

nixos-generate-config --root /mnt
