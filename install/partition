#!/usr/bin/env bash
# Usage: partition /dev/diskname
set -e
DISK="$1"

echo "PARTITIONING..."

parted $DISK -- mklabel gpt
parted -s $DISK -- mkpart ESP fat32 1MiB 512MiB
parted -s $DISK -- set 1 boot on
parted -s $DISK -- name 1 Boot

parted -s $DISK -- mkpart primary 512MiB 100%
parted -s $DISK -- name 2 Root

export BOOT_PARTITION=$(lsblk $DISK -r -p -n --sort NAME | sed '2q;d' | awk '{print $1}')
export ROOT_PARTITION=$(lsblk $DISK -r -p -n --sort NAME | sed '3q;d' | awk '{print $1}')
export CRYPT_DEVICE="crypt-root"

echo "FORMATTING..."
echo "BOOT PARTITION = $BOOT_PARTITION"
echo "ROOT PARTITION = $ROOT_PARTITION"
echo "CRYPT PARTITION = /dev/mapper/$CRYPT_DEVICE"

mkfs.vfat -F32 -n BOOT $BOOT_PARTITION

cryptsetup --pbkdf argon2i -s 512 --use-random luksFormat $ROOT_PARTITION
cryptsetup luksOpen $ROOT_PARTITION $CRYPT_DEVICE

zpool create -o ashift=12 -O mountpoint=none -O normalization=formD -O compression=lz4 rpool /dev/mapper/$CRYPT_DEVICE
zfs create -o mountpoint=legacy rpool/root
zfs create -o mountpoint=legacy rpool/home
zfs create -o mountpoint=legacy rpool/nix
zfs create -o mountpoint=legacy rpool/var

echo "MOUNTING..."

mkdir -p /mnt
mount -t zfs rpool/root /mnt
mkdir /mnt/{boot,home,nix,var}
mount -t zfs rpool/home /mnt/home
mount -t zfs rpool/nix  /mnt/nix
mount -t zfs rpool/var  /mnt/var

mount $BOOT_PARTITION /mnt/boot

echo "GENERATING..."

nixos-generate-config --root /mnt
